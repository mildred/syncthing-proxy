# From: https://github.com/jandelgado/golang-ci-template-github-actions/blob/master/.github/workflows/upload_assets.yml
on:
  push:
    tags:
      - 'v*'
    branches:
      - master

env:
  GO_VERSION: "1.22.0"

name: Upload release assets after tagging
jobs:
  build:
    permissions: write-all
    name: create assets
    runs-on: ubuntu-latest
    steps:
      - if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: |
          echo "flags=" >> $GITHUB_ENV
          echo "fetch_tags=true" >> $GITHUB_ENV
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-tags: ${{ env.fetch_tags }}
      - if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: |
          git tag "v0.0.0-$(git rev-parse --abbrev-ref HEAD)-latest"
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@286f3b13b1b49da4ac219696163fb8c1c93e1200 #v6
        with:
          version: v2
          args: release --clean ${{ env.flags }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-image:
    permissions: write-all
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    name: create docker image
    runs-on: ubuntu-latest
    steps:
      - if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: |
          echo "fetch_tags=true" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-tags: ${{ env.fetch_tags }}
      - name: Log in to the Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build Docker image
        run: |
          VERSION=$(git describe --tags --always)
          docker build --build-arg "version=$VERSION" --tag ${IMAGE_NAME} .
      - name: push Docker image
        run: |
          TAG=$(git describe --tags)
          docker tag ${IMAGE_NAME} ${REGISTRY}/${IMAGE_NAME}:${GITHUB_SHA}
          docker tag ${IMAGE_NAME} ${REGISTRY}/${IMAGE_NAME}:${TAG}
          docker tag ${IMAGE_NAME} ${REGISTRY}/${IMAGE_NAME}:latest
          docker push ${REGISTRY}/${IMAGE_NAME}:${GITHUB_SHA}
          docker push ${REGISTRY}/${IMAGE_NAME}:${TAG}
          docker push ${REGISTRY}/${IMAGE_NAME}:latest
